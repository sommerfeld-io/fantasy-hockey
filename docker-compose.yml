---
# @file docker-compose.yml
# @brief Docker Compose stack to (build and) start the whole application locally.
#
# @description This Compose stack automates the building and launching of all containers required
# for the fantasy hockey app. It comprises multiple Docker images that collectively constitute the
# application's system.
#
# | What              | URL (host-port)            | Info               |
# | ----------------- | -------------------------- | ------------------ |
# | app               | http://localhost:8080/app  | Fantasy Hockey app |
# | docs              | http://localhost:8081/docs | Antora docs page   |
#
# IMPORTANT: This Compose stack is designed for development purposes only. While it could serve as
# a blueprint for pre-production or production use, it should never be directly utilized in those
# environments.
#
# == How to use this compose configuration
#
# [source, bash]
# ```
# # Build and start
# docker compose build
# docker compose up
#
# # Build and start in one command
# docker compose up --build
#
# # Stop and remove images
# docker compose down --rmi all --volumes --remove-orphans
# ```


version: "3.3"

services:

  docs:
    container_name: ${COMPOSE_PROJECT_NAME}-docs
    build: .
    image: local/${COMPOSE_PROJECT_NAME}-docs:${DEV_TAG}
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - 8081:8081
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8081/docs || exit 1"
      interval: 10s
      timeout: 2s
      retries: 16
      start_period: 5s

  app:
    container_name: ${COMPOSE_PROJECT_NAME}-app
    build: components/app
    image: local/${COMPOSE_PROJECT_NAME}-app:${DEV_TAG}
    ports:
      - 8080:8080
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"
      interval: 10s
      timeout: 2s
      retries: 16
      start_period: 5s

  inspec:
    container_name: inspec
    image: chef/inspec:5.22.36
    volumes:
      - ./components/test/inspec:/inspec
      - &docker-sock /var/run/docker.sock:/var/run/docker.sock
    working_dir: &work_dir /inspec
    command: exec app --target docker://${COMPOSE_PROJECT_NAME}-app --chef-license=accept-no-persist
    depends_on:
      app:
        condition: service_healthy
